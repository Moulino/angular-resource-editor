!function(a){"use strict";var b=a.forEach,c=a.isDefined,d=a.isUndefined,e=a.isObject,f=(a.isArray,a.isDate,a.isString),g=a.isFunction,h=a.fromJson,i=a.toJson,j=a.extend,k=a.merge,l=a.copy,m={title_list:"Resource manager",title_add:"Add a resource",title_edit:"Edit a resource",question_remove:"Do you want to remove this resource ?"},n=a.module("mlResourceEditor",["ngResource","ngMaterial"]);n.factory("mlUtils",function(){var a={rDateConvert:function(c){b(c,function(b,d){if(e(b))a.rDateConvert(b);else if(f(b)){var g=new Date(b);isNaN(g.getDate())||(c[d]=g)}})}};return a}),n.factory("mlResourceTransform",function(a){return{request:function(a){return b(a,function(b,d){e(b)&&c(b.id)&&(a[d]=b.id)}),i(a)},response:function(b){var c=h(b);return a.rDateConvert(c),c}}}),n.filter("inInputTypes",[function(){var a=["text","number"];return function(b){for(var c=0;c<a.length;c++)if(a[c]==b)return!0;return!1}}]),n.provider("mlResources",function(){var a=this.resources={},e=this.collections={},f=this.options={};this.addResource=function(a){var b=a.name;f[b]=a},this.$get=function(g,h,i){var j={init:function(){var c={query:{isArray:!0,method:"GET",transformResponse:i.response},update:{method:"PUT",transformRequest:i.request},save:{method:"POST",transformRequest:i.request}};b(f,function(b,d){var f={};k(f,c,b.actions),a[d]=g(b.url,b.url_params,f),e[d]=[],j.load(d)})},load:function(a){if(d(a))throw"The function load() from mlResources service requires the 'name' attribut.";var b=j.getResource(a),c=j.getCollection(a);b.query().$promise.then(function(a){c.length=0;for(var b=0;b<a.length;b++)c.push(a[b])},function(a){h.alert(a.statusText)})},getResource:function(b){return a[b]},getCollection:function(a){return e[a]},getOptions:function(a){return f[a]},createResource:function(a){var d=j.getResource(a),e=j.getOptions(a).fields,f=new d;return b(e,function(a){c(a.type)&&("date"===a.type?f[a.model]=new Date:"select"===a.type?f[a.model]=null:"number"===a.type?f[a.model]=0:"text"===a.type&&(f[a.model]=""))}),f}};return j}}),n.directive("mlList",function(a){return{restrict:"A",template:o,scope:{},link:function(b,c,d){b.name=d.name,b.mode="inline",a("mlListController",{$scope:b})}}}),n.directive("mlListSelection",function(){return{restrict:"A",link:function(a,b){b.find("tbody").on("click","tr",function(){$(this).siblings(".selected").removeClass("selected"),$(this).hasClass("selected")?($(this).removeClass("selected"),a.rowSelected=null):($(this).addClass("selected"),a.rowSelected=$(this).index()),a.$apply()})}}}),n.factory("mlEditorDialog",function(a,b,c){return{open:function(e,f){var g=d(f),h=c.getOptions(e),i=a.$new(!0);return i.item=g?c.createResource(e):f,i.title=g?h.title_add:h.title_edit,i.fields=h.fields,b.show({template:p,controller:"mlEditorController",scope:i,clickOutsideToClose:!0})},close:function(){b.cancel()}}}),n.factory("mlListDialog",function(a,b,c){var d="<md-dialog><i class='md-icon ml-close-button material-icons' ng-click='cancel()'>close</i><md-content-dialog class='md-dialog-content'>"+o+"</md-dialog-content></md-dialog>";return{open:function(e){var f=a.$new(!0);return f.name=e,f.mode="dialog",c.show({template:d,controller:"mlListController",scope:f,clickOutsideToClose:!0,parent:b})},close:function(){c.hide()}}}),n.controller("mlEditorController",function(a,b,d){a.ok=function(){b.hide(a.item)},a.cancel=function(){b.cancel()},a.getOptions=function(a){return c(a.select_resource)?d.getCollection(a.select_resource.collection):void 0},a.getOptionText=function(a,b){var c=a.select_resource.column;return b[c]}}),n.controller("mlListController",function(a,e,f,h,i,k){a.items=h.getCollection(a.name),a.loading=!1,a.rowSelected=null,a.options=h.getOptions(a.name),j(a,m,a.options),d(a.mode)&&console.error("The mode value must be defined."),a.itemSelected=function(){return null!=a.rowSelected?a.items[a.rowSelected]:null},a.normalizeResources=function(d){var e=l(d);return b(a.fields,function(a){if("select"===a.type&&c(a.select_resource)){var d=a.model,f=e[d].id;b(h.getCollection(a.select_resource.collection),function(a){a.id===f&&(e[d]=a)})}}),e},a.add=function(){i.open(a.name).then(function(b){b.$save().then(function(){h.load(a.name),close()},function(a){console.log(a)})})["finally"](function(){"dialog"===a.mode&&k.open(a.name)})},a.edit=function(){var b=a.itemSelected();b=a.normalizeResources(b),i.open(a.name,b).then(function(b){b.$update().then(function(){h.load(a.name),a.rowSelected=null,close()},function(a){console.log(a)})})["finally"](function(){"dialog"===a.mode&&k.open(a.name)})},a.remove=function(){if(e.confirm(a.question_remove)===!0){var b=a.itemSelected();b.$remove().then(function(){h.load(a.name)},function(a){e.alert(a.statusText)})["finally"](function(){a.rowSelected=null,a.confirm=null})}},a.getString=function(a,b){return g(a.to_string)?a.to_string(b):"date"===a.type&&c(a.date_format)?f("date")(b[a.model],a.date_format):b[a.model]}});var o='<div class="ml-list"><div><table ml-list-selection><caption><span class="ml-list-title">{{ title_list }} </span><div class="ml-list-actions"><i class="md-icon material-icons green" ng-click="add()">add</i><i class="md-icon material-icons yellow" ng-disabled="rowSelected == null" ng-click="edit()">create</i><i class="md-icon material-icons red" ng-disabled="rowSelected == null" ng-click="remove()">delete</i></div></caption><thead><tr><th ng-repeat="field in fields">{{ field.label }}</th></tr></thead><tbody><tr ng-repeat="item in items"><td ng-repeat="field in fields">{{ getString(field, item) }}</td></tr></tbody></table></div></div>',p='<md-dialog><md-dialog-content class="md-dialog-content"><i class="md-icon ml-close-button material-icons" ng-click="cancel()">close</i><div><div class="ml-editor-title">{{ title }}</div><form><div ng-repeat="field in fields"><md-input-container class="md-block" ng-if="field.type|inInputTypes"><label>{{ field.label }}</label><input name="{{ field.model }}" type="{{ field.type }}" ng-model="item[field.model]" ng-required="field.required === true"/></md-input-container><md-input-container class="md-block" ng-if="field.type === \'select\'"><label>{{ field.label }}</label><md-select ng-model="item[field.model]" ng-required="field.required === true"><md-option ng-repeat="option in getOptions(field)" ng-value="option">{{ getOptionText(field, option) }}</md-option></md-select></md-input-container><div ng-if="field.type == \'date\'"><md-datepicker ng-model="item[field.model]" md-placeholder="{{ field.label }}" ng-required="field.required === true" aria-label="datetime"></md-datepicker></div><md-input-container class="md-block" ng-if="field.type == \'textarea\'"><label>{{ field.label }}</label><textarea ng-model="item[field.model]" columns="1" md-max-length="150"></textarea></md-input-container></div><md-dialog-actions><md-button class="md-accent md-raised ml-button" ng-click="cancel()">Annuler</md-button><md-button class="md-primary md-raised ml-button" type="submit" ng-click="ok()">Ok</md-button></md-dialog-actions></form></div></md-dialog-content></md-dialog>'}(angular);